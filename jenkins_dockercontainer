pipeline {
    agent any
    parameters {
        string(name: 'EMPLOYEE_ID', defaultValue: '1', description: 'Employee ID for which the container should be started')
    }
    
    stages {
        stage('Pull Docker Image') {
            steps {
                script {
                    // Define the image name from Docker Hub
                    def imageName = "pardeepkaur/chrome-vnc:latest"  // Docker Hub image name

                    try {
                        echo "Attempting to pull Docker image: ${imageName}"

                        // Log in to Docker Hub using Jenkins credentials
                        withCredentials([usernamePassword(credentialsId: "docker", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) { 
                            // Perform Docker login and pull the image from Docker Hub
                            sh """
                                echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USER} --password-stdin
                                docker pull ${imageName}
                            """
                        }
                        echo "Docker image pulled successfully from Docker Hub."
                    } catch (Exception e) {
                        echo "Failed to pull Docker image: ${e.message}"
                        throw e
                    }
                }
            }
        }
    }
    post {
        always {
            // Clean up the workspace after the job to avoid any residue of previous builds
            echo "Cleaning up the workspace"
            cleanWs()
        }
    }
}
